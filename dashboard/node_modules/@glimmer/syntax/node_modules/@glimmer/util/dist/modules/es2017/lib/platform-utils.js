export function keys(obj) {
  return Object.keys(obj);
}
export function unwrap(val) {
  if (val === null || val === undefined) throw new Error(`Expected value to be present`);
  return val;
}
export function expect(val, message) {
  if (val === null || val === undefined) throw new Error(message);
  return val;
}
export function unreachable(message = 'unreachable') {
  return new Error(message);
}
export function exhausted(value) {
  throw new Error(`Exhausted ${value}`);
}
export const tuple = (...args) => args;
export const symbol = typeof Symbol !== 'undefined' ? Symbol : key => `__${key}${Math.floor(Math.random() * Date.now())}__`;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL3BsYXRmb3JtLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE9BQU0sU0FBVSxJQUFWLENBQWtCLEdBQWxCLEVBQXdCO0FBQzVCLFNBQU8sTUFBTSxDQUFDLElBQVAsQ0FBWSxHQUFaLENBQVA7QUFDRDtBQUVELE9BQU0sU0FBVSxNQUFWLENBQW9CLEdBQXBCLEVBQWlDO0FBQ3JDLE1BQUksR0FBRyxLQUFLLElBQVIsSUFBZ0IsR0FBRyxLQUFLLFNBQTVCLEVBQXVDLE1BQU0sSUFBSSxLQUFKLENBQVUsOEJBQVYsQ0FBTjtBQUN2QyxTQUFPLEdBQVA7QUFDRDtBQUVELE9BQU0sU0FBVSxNQUFWLENBQW9CLEdBQXBCLEVBQW1DLE9BQW5DLEVBQWtEO0FBQ3RELE1BQUksR0FBRyxLQUFLLElBQVIsSUFBZ0IsR0FBRyxLQUFLLFNBQTVCLEVBQXVDLE1BQU0sSUFBSSxLQUFKLENBQVUsT0FBVixDQUFOO0FBQ3ZDLFNBQU8sR0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLFdBQVYsQ0FBc0IsT0FBTyxHQUFHLGFBQWhDLEVBQTZDO0FBQ2pELFNBQU8sSUFBSSxLQUFKLENBQVUsT0FBVixDQUFQO0FBQ0Q7QUFFRCxPQUFNLFNBQVUsU0FBVixDQUFvQixLQUFwQixFQUFnQztBQUNwQyxRQUFNLElBQUksS0FBSixDQUFVLGFBQWEsS0FBSyxFQUE1QixDQUFOO0FBQ0Q7QUFJRCxPQUFPLE1BQU0sS0FBSyxHQUFHLENBQWtCLEdBQUcsSUFBckIsS0FBaUMsSUFBL0M7QUFFUCxPQUFPLE1BQU0sTUFBTSxHQUNqQixPQUFPLE1BQVAsS0FBa0IsV0FBbEIsR0FDSSxNQURKLEdBRUssR0FBRCxJQUFpQixLQUFLLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBTCxDQUFXLElBQUksQ0FBQyxNQUFMLEtBQWdCLElBQUksQ0FBQyxHQUFMLEVBQTNCLENBQXNDLElBSGpFIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgT3B0aW9uPFQ+ID0gVCB8IG51bGw7XG5leHBvcnQgdHlwZSBNYXliZTxUPiA9IE9wdGlvbjxUPiB8IHVuZGVmaW5lZCB8IHZvaWQ7XG5cbmV4cG9ydCB0eXBlIEZhY3Rvcnk8VD4gPSBuZXcgKC4uLmFyZ3M6IHVua25vd25bXSkgPT4gVDtcblxuZXhwb3J0IGZ1bmN0aW9uIGtleXM8VD4ob2JqOiBUKTogQXJyYXk8a2V5b2YgVD4ge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKSBhcyBBcnJheTxrZXlvZiBUPjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVud3JhcDxUPih2YWw6IE1heWJlPFQ+KTogVCB7XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgdmFsdWUgdG8gYmUgcHJlc2VudGApO1xuICByZXR1cm4gdmFsIGFzIFQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBlY3Q8VD4odmFsOiBNYXliZTxUPiwgbWVzc2FnZTogc3RyaW5nKTogVCB7XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIHZhbCBhcyBUO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5yZWFjaGFibGUobWVzc2FnZSA9ICd1bnJlYWNoYWJsZScpOiBFcnJvciB7XG4gIHJldHVybiBuZXcgRXJyb3IobWVzc2FnZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGhhdXN0ZWQodmFsdWU6IG5ldmVyKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgRXJyb3IoYEV4aGF1c3RlZCAke3ZhbHVlfWApO1xufVxuXG5leHBvcnQgdHlwZSBMaXQgPSBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgdW5kZWZpbmVkIHwgbnVsbCB8IHZvaWQgfCB7fTtcblxuZXhwb3J0IGNvbnN0IHR1cGxlID0gPFQgZXh0ZW5kcyBMaXRbXT4oLi4uYXJnczogVCkgPT4gYXJncztcblxuZXhwb3J0IGNvbnN0IHN5bWJvbCA9XG4gIHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnXG4gICAgPyBTeW1ib2xcbiAgICA6IChrZXk6IHN0cmluZykgPT4gYF9fJHtrZXl9JHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBEYXRlLm5vdygpKX1fX2AgYXMgYW55O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==